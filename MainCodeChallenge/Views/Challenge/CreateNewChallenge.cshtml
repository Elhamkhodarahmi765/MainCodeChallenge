@model MainCodeChallenge.Tbl_Challenge

@{
    ViewBag.Title = "CreateNewChallenge";
}
<link href="~/Content/ChCreate.css" rel="stylesheet" />
<h2>CreateNewChallenge</h2>


<div class="form-horizontal">


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*model.Qid*@
    @*model.QpersonOwner*@


    <br />







    <div class="form-group">
        @Html.LabelFor(model => model.QName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">


            @Html.EditorFor(model => model.QName, new { htmlAttributes = new { @class = "form-control", Id = "txtQName" } })

            @Html.ValidationMessageFor(model => model.QName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.QDescription, new { Id = "QDescription", style = "width:100%;", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.QDescription, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">category</label>
        <div class="col-md-10">

            @Html.DropDownList("category", new SelectList(ViewBag.category, "CId", "CName"), new { Id = "DropCat" })

            @Html.ValidationMessageFor(model => model.QCId, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.QLevel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("levelD", null, new { Id = "levelD" })

            <br />

        </div>
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.QRpoint, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QRpoint, new { htmlAttributes = new { @class = "form-control", Id = "txtPoint" } })
            @Html.ValidationMessageFor(model => model.QRpoint, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Qfactor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Qfactor, new { htmlAttributes = new { @class = "form-control", Id = "txtFactor" } })
            @Html.ValidationMessageFor(model => model.Qfactor, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="col-md-offset-2 col-md-10">

        <button id="Create" Onclick="SubmitCh()" class="btn">create</button>
    </div>

</div>


<div>
    @Html.ActionLink("AdminPage", "AdminPage", "Account")
</div>








@section scripts{
    <script>
        function SubmitCh() {


                var txtD = document.getElementById('QDescription').value ;
                var txtChName = document.getElementById('txtQName').value;
                var dropdown = document.getElementById('levelD');
                var Point = document.getElementById('txtPoint').value;
                var factor = document.getElementById('txtFactor').value;
                var catId = document.getElementById('DropCat'); 
   
            $.ajax({
                 url: '@Url.Action("SaveNewChallenge", "Challenge")',
                    type: "post",
                    data: { 'CH': txtD, 'CHName': txtChName, 'L': dropdown.value, 'Rpoint': Point, 'factor': factor ,'Cid': catId.value} ,
                    cache: false,
                    success: function (savingStatus) {
                        alert("success");
                        //success();
                    },
                error: function (xhr, ajaxOptions, thrownError) {

                        alert("error");

                    }
                });


            }
    </script>


}
